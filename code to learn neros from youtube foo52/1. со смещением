include "neural_func2.pixi"
coef=0.1      // скорость обучения
neurons = 5   //нейронов в скрытом слое
speed = 50    // обновлять изображение на экране каждую 50 эпоху


massive_size = 32

rand_seed( get_seconds()) 
xy = new(massive_size,2,FLOAT)  // координаты точек
xyc= new(massive_size,1,FLOAT)  // класс точек (варианты 1 и 0)
	xy[0,0]  = 0.90    xy[0,1] = 0.05   xyc[0]  = 0
	xy[1,0]  = 0.10    xy[1,1] = 0.15   xyc[1]  = 0 
 	xy[2,0]  = 0.08    xy[2,1] = 0.50   xyc[2]  = 0
	xy[3,0]  = 0.20    xy[3,1] = 0.40   xyc[3]  = 0 
	xy[4,0]  = 0.15    xy[4,1] = 0.50   xyc[4]  = 0
	xy[5,0]  = 0.18    xy[5,1] = 0.65   xyc[5]  = 0 
	xy[6,0]  = 0.30    xy[6,1] = 0.75   xyc[6]  = 0
	xy[7,0]  = 0.05    xy[7,1] = 0.75   xyc[7]  = 0 
	xy[8,0]  = 0.10    xy[8,1] = 0.05   xyc[8]  = 0
	xy[9,0]  = 0.20    xy[9,1] = 0.15   xyc[9]  = 0 
	xy[10,0] = 0.35    xy[10,1] = 0.10  xyc[10] = 0
	xy[11,0] = 0.95    xy[11,1] = 0.95  xyc[11] = 1 	
	xy[12,0] = 0.80    xy[12,1] = 0.90  xyc[12] = 1
	xy[13,0] = 0.63    xy[13,1] = 0.02  xyc[13] = 0 
 	xy[14,0] = 0.74    xy[14,1] = 0.10  xyc[14] = 0
	xy[15,0] = 0.90    xy[15,1] = 0.18  xyc[15] = 0 
	//---------------------------------------------
	xy[16,0] = 0.55    xy[16,1] = 0.24  xyc[16] = 1
	xy[17,0] = 0.31    xy[17,1] = 0.25  xyc[17] = 1 
	xy[18,0] = 0.42    xy[18,1] = 0.47  xyc[18] = 1
	xy[19,0] = 0.48    xy[19,1] = 0.62  xyc[19] = 1 
	xy[20,0] = 0.51    xy[20,1] = 0.90  xyc[20] = 1
	xy[21,0] = 0.40    xy[21,1] = 0.60  xyc[21] = 1 
	xy[22,0] = 0.55    xy[22,1] = 0.70  xyc[22] = 1
	xy[23,0] = 0.67    xy[23,1] = 0.41  xyc[23] = 1 	
	xy[24,0] = 0.72    xy[24,1] = 0.84  xyc[24] = 1
	xy[25,0] = 0.79    xy[25,1] = 0.25  xyc[25] = 1 
	xy[26,0] = 0.83    xy[26,1] = 0.54  xyc[26] = 1
	xy[27,0] = 0.20    xy[27,1] = 0.95  xyc[27] = 1 
	xy[28,0] = 0.80    xy[28,1] = 0.73  xyc[28] = 1
	xy[29,0] = 0.30    xy[29,1] = 0.95  xyc[29] = 1 
	xy[30,0] = 0.30    xy[30,1] = 0.30  xyc[30] = 1
	xy[31,0] = 0.70    xy[31,1] = 0.62  xyc[31] = 1 

 


//******** создаём нейросеть  ****************************
//-----0
	N0  =  new(3,2,FLOAT)   // первый слой входной + нейрон смещения
	clean(N0) 	N0[2,0]=1   // в нейроне смещения 1
	W01 =  new(3,neurons,FLOAT)   // матрица весов
	//-----1
	N1  =  new(neurons,2,FLOAT)   // второй слой скрытый
	clean(N1) 
	W12 =  new(neurons,2,FLOAT)   // матрица весов
//-----2
//------------
	N2  =  new(2,2,FLOAT)   // третий слой выход	
	clean(N2)  
//-----ideal
	IDL =  new(2,1,FLOAT)   // нужно получить
	clean(IDL)	
	// заполняем матрицы случайными значениями
	fillW(W01)
	fillW(W12)


//*********************************************************

	step=0
	ses=0	
	
	
//********************************************************
 aaa:

		
	// загружаем пример во входные нейроны
	N0[0,0]  = xy[ses,0]
	N0[1,0]  = xy[ses,1]
	// то, что ждём на выходе
	if xyc[ses]==1	{ IDL[0,0] = 0   IDL[1,0] = 1 }
	else            { IDL[0,0] = 1	 IDL[1,0] = 0 }
	
	// прямое прохождение сигнала
    forWards(N0,W01,N1)
	forWards(N1,W12,N2)
	
	// определяем ошибку
	fixOutError(IDL,N2)	
	findError(N1, W12, N2)
	
	// обратное распространение ошибки

	backWards(N1, W12, N2,coef)
   	backWards(N0, W01, N1,coef)
	
	

	
    ses=ses+1
	// если прошли по всем точкам
	if ses == massive_size
	{  // то выводим изображение на экран
	
		if mod(step,speed) == 0
		{
			clear()       // очистит экран
			printGrad()   // рисуем градиент
			printDot()    // рисуем объекты
		
			print(n2s(step),0,240)
			print(n2s(neurons),200,240,BLUE)
			frame()
		}
		step = step+1
		ses=0
	}
	goto aaa

//**********************************************************

	
///*********************    ФУНКЦИИ     ****************************
// рисуем точки из обучающей выборки	
fn printDot()	
{
	$ses=0
	while $ses<massive_size
	{
		if xyc[$ses] == 0 
		{ 
			box( xy[$ses,0]*400-201  ,xy[$ses,1]*400-201 , 5,5, #ffffff)
			fbox( xy[$ses,0]*400-200  ,xy[$ses,1]*400-200 , 4,4, #000000) 	
		}
		else 
		{ 
			box( xy[$ses,0]*400-201  ,xy[$ses,1]*400-201 , 5,5, #000000 ) 
			fbox( xy[$ses,0]*400-200  ,xy[$ses,1]*400-200 , 4,4, #ffffff ) 
		}
		$ses=$ses+1
	}	
}

/// рисуем результат работы сети
fn printGrad()
{
	$y = 1
	while $y < 100
	{
		$x = 1
		while $x < 100
		{
			N0[0,0]  = $x/100
			N0[1,0]  = $y/100
			// прямое прохождение сигнала
			forWards(N0,W01,N1)
			forWards(N1,W12,N2)
			
			fbox( $x*4-200  , $y*4-200 , 4,4, get_color( N2[0,0]*255, 0,N2[1,0]*255 ))
			$x = $x + 1
		}
		$y = $y + 1
	}
}

// берёт число возврат-строка
fn n2s( $n )
 {
  $s=""
  num2str( $s, $n )
  ret( $s)
 } 